// Deployment script: https://github.com/blundell/release-android-library
// Run with command ./gradlew clean build generateRelease
apply plugin: 'maven'

def groupId = POM_GROUP_ID
def artifactId = POM_ARTIFACT_ID
def version = POM_VERSION_ID

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

    //noinspection GroovyAssignabilityCheck
    classpath += files(ext.androidJar)

    failOnError = false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'

    //noinspection GroovyAssignabilityCheck
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'

    //noinspection GroovyAssignabilityCheck
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "file://${localReleaseDest}")

        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}

task generateRelease {
    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
    }
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
